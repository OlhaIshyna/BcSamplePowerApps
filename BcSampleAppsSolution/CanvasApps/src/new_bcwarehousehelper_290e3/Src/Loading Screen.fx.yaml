"'Loading Screen' As screen":
    Fill: =varTheme.brandColor
    OnVisible: |+
        =
        

    conLoadingContent As groupContainer.verticalAutoLayoutContainer:
        Height: =Parent.Height
        LayoutAlignItems: =LayoutAlignItems.Center
        LayoutDirection: =LayoutDirection.Vertical
        LayoutGap: =200
        LayoutJustifyContent: =LayoutJustifyContent.Center
        LayoutMode: =LayoutMode.Auto
        Width: =Parent.Width
        ZIndex: =1

        imgLoadingLogo As image:
            Height: =243
            Image: ='warehouse helper logo'
            LayoutMinHeight: =320
            LayoutMinWidth: =320
            Width: =235
            X: =Parent.Width/2 - Self.Width/2
            Y: =80
            ZIndex: =1

        imgLoadingSpinner As image:
            Image: =Spinner_DarkBlue_2x
            LayoutMinHeight: =320
            LayoutMinWidth: =320
            ZIndex: =2

    timeStartLoading As timer:
        AutoStart: =true
        BorderThickness: =0
        Duration: =1000
        Fill: =RGBA(0, 0, 0, 0)
        Height: =Parent.Height
        HoverFill: =Color.Transparent
        OnSelect: |-
            =// Load Data
            Concurrent(
                Set(varWarehouses, 'locations (v2.0)'),
                Set(varCompanyInformation, First('localizationInformations (microsoft/powerApps/beta)'));
            );
            Set(varSelectedWarehouse, First(varWarehouses));
            
            // Get localized labels from Bc
            // TODO: AL logic to parse language parameter fails
            Set(varLanguageResources, 'warehousehelperlanguageresources (microsoft/powerApps/beta)');
            Set(varLabels, {
                StartScreen_Scan: LookUp(varLanguageResources, labelId = "StartScreen_Scan").displayName,
                StartScreen_InfoPage: LookUp(varLanguageResources, labelId = "StartScreen_InfoPage").displayName,
                StartScreen_User: LookUp(varLanguageResources, labelId = "StartScreen_User").displayName,
                Close: LookUp(varLanguageResources, labelId = "Close").displayName,
                Back: LookUp(varLanguageResources, labelId = "Back").displayName,
                InfoScreen_Title: LookUp(varLanguageResources, labelId = "InfoScreen_Title").displayName,
                InfoScreen_Text: LookUp(varLanguageResources, labelId = "InfoScreen_Text").displayName,
                ItemScreen_Submit: LookUp(varLanguageResources, labelId = "ItemScreen_Submit").displayName,
                ItemScreen_Add: LookUp(varLanguageResources, labelId = "ItemScreen_Add").displayName,
                ItemScreen_SubStract: LookUp(varLanguageResources, labelId = "ItemScreen_SubStract").displayName,
                ItemScreen_SubStractBlocked: LookUp(varLanguageResources, labelId = "ItemScreen_SubStractBlocked").displayName,
                SelectWarehouseScreen_Title: LookUp(varLanguageResources, labelId = "SelectWarehouseScreen_Title").displayName,    
                NotFoundScreen_Title: LookUp(varLanguageResources, labelId = "NotFoundScreen_Title").displayName,
                NotFoundScreen_Text: LookUp(varLanguageResources, labelId = "NotFoundScreen_Text").displayName,
                NotFoundScreen_Scan: LookUp(varLanguageResources, labelId = "NotFoundScreen_Scan").displayName
            });
            
            // Load app state from local storage
            Set(varAppStateKey, "BCWarehouseAppStateKey");
            Set(varAppStateAvailable, true);
            
            // Check if local storage is available
            IfError(LoadData(colStoredAppState, varAppStateKey), 
                Set(varAppStateAvailable, false)
            );
            
            If(varAppStateAvailable, 
                With({
                    storedWarehouse: LookUp(varWarehouses, id = First(colStoredAppState).warehouse)
                },
                    If(Not(IsBlankOrError(storedWarehouse)),
                        Set(varSelectedWarehouse, storedWarehouse);
                    );
                );
            );
            
            Navigate('Start Screen', ScreenTransition.Fade);
        OnTimerStart: =Select(Self);
        Start: =true
        Text: =
        Width: =Parent.Width
        ZIndex: =2

